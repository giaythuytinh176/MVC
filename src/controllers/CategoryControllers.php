<?php

namespace MVC\controllers;

use MVC\Models\CategoryModels;

class CategoryControllers extends CategoryModels
{
    public function getCategorybyID($action, $params)
    {
        $data = parent::getCategorybyID($action, $params);
        return $data;
    }

    public function getDetailElementbyCodeSub($code)
    {
        return parent::getDetailElementbyCodeSub($code); // TODO: Change the autogenerated stub
    }

    public function getDetaiElementbyCode($code)
    {
        return parent::getDetaiElementbyCode($code); // TODO: Change the autogenerated stub
    }

    public function checkSubCategory($action, $params)
    {
        $data = $this->checkSubCategorybyID($action, $params);
        ToolControllers::PrettyShow($data, true);


    }

    public function getAllSubCategoryControllers($code)
    {
        $data = parent::getAllSubCategoryModels($code);
        return $data;
    }

    public static function printListCategory()// Not used
    {
        $sout = '';
        foreach ((new \MVC\controllers\CategoryControllers)->getAllListcategory() as $value) {
            $sout .= '<li class="menu-item">';
            $sout .= '<a class="menu-link" href=' . \MVC\controllers\UrlControllers::url("category/" . $value['category_name']) . '><div>' . \MVC\libs\Languages::getLangData($value['category_name']) . '</div></a>';
            $sout .= '<ul class="sub-menu-container">';
            foreach ((new \MVC\controllers\CategoryControllers())->getAllCategorybyParentID($value['parent_id']) as $v) {
                $sout .= '<li class="menu-item">';
                $sout .= '<a class="menu-link" href=' . \MVC\controllers\UrlControllers::url("category/{$value['category_name']}/{$v['code']}") . '><div>' . \MVC\libs\Languages::getLangData($v['title']) . '</div></a>';
                if (empty((new \MVC\controllers\CategoryControllers())->getAllSubCategoryControllers($v['code'])['errors'])) {
                    $sout .= '<ul class="sub-menu-container">';
                    foreach ((new \MVC\controllers\CategoryControllers())->getAllSubCategoryControllers($v['code']) as $val) {
                        $sout .= ' <li class="menu-item"><a class="menu-link" href=' . \MVC\controllers\UrlControllers::url("category/" . $value['category_name']) . "/" . $val['codeSUB'] . '><div>' . \MVC\libs\Languages::getLangData($val['title']) . '</div></a></li>';
                    }
                    $sout .= '</ul>';
                }
                $sout .= '</li>';
            }
            $sout .= '</ul>';
            $sout .= '</li>';
        }
        return $sout;
    }

    public static function printListCategoryIncludeSub()
    {
        $sout = '';
        foreach ((new \MVC\controllers\CategoryControllers)->getAllListcategory() as $value) {
            $sout .= '<li class="menu-item">';
            $sout .= '<a class="menu-link" href=' . \MVC\controllers\UrlControllers::url("category/" . $value['category_name']) . '><div>' . \MVC\libs\Languages::getLangData($value['category_name']) . '</div></a>';
            $sout .= '<ul class="sub-menu-container">';
            foreach ((new \MVC\controllers\CategoryControllers())->getAllCategorybyParentID($value['parent_id']) as $v) {
                $sout .= '<li class="menu-item">';
                $sout .= '<a class="menu-link" href=' . \MVC\controllers\UrlControllers::url("category/{$value['category_name']}/{$v['code']}") . '><div>' . \MVC\libs\Languages::getLangData($v['title']) . '</div></a>';
                if (empty((new \MVC\controllers\CategoryControllers())->getAllSubCategoryControllers($v['code'])['errors'])) {
                    $sout .= '<ul class="sub-menu-container">';
                    foreach ((new \MVC\controllers\CategoryControllers())->getAllSubCategoryControllers($v['code']) as $val) {
                        $sout .= ' <li class="menu-item"><a class="menu-link" href=' . \MVC\controllers\UrlControllers::url("category/" . $value['category_name']) . "/{$v['code']}/" . $val['codeSUB'] . '><div>' . \MVC\libs\Languages::getLangData($val['title']) . '</div></a></li>';
                    }
                    $sout .= '</ul>';
                }
                $sout .= '</li>';
            }
            $sout .= '</ul>';
            $sout .= '</li>';
        }
        return $sout;
    }

    public function getAllCategorybyParentID($action)
    {
        $data = parent::getAllCategorybyParentID($action); // TODO: Change the autogenerated stub
        return $data;
    }

    public function getAllCategoryView($action)
    {
        $data = $this->getAllCategorybyParentID($action);
        (new renderControllers())->view("category/shop-category-parallax", $data);
    }
}